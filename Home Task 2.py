# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных
# каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у
# пользователя, а указать явно, в программе.


# my_list = ['Adil',1,8.34,True,False,'+']
#
# for i in my_list:
#     print(type(i))


# 2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1,
# 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов
# нужно использовать функцию input().

# index_count = int(input('Сколько элементов будет в вашем списке? '))
# user_input_list = []
# while index_count > 0:
#     user_input_list.append(input('Введите Элемент вашего списка '))
#     index_count = index_count - 1
#
# length = len(user_input_list)
# n = 0
# if length>1:
#     while n < length - 1:
#         perm = user_input_list[n]
#         user_input_list[n] = user_input_list[n+1]
#         user_input_list[n+1] = perm
#         n = n + 2
#
# print(user_input_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима,
# весна, лето, осень). Напишите решения через list и dict.
#

# my_list_task3 = [[12,'Зима' ],[1,'Зима'],[2,'Зима'],[3,'Весна'],[4,'Весна'],[5,'Весна'],[6,'Лето'],
#                  [7,'Лето'],[8,'Лето'],[9,'Осень'],[10,'Осень'],[11,'Осень']]
# month_list = int(input('Введите число месяца от 1 до 12 '))
# for i in my_list_task3:
#     if month_list == i[0]:
#         print(f'Вашему выбранному месяцу соответствует время года {i[1]}')



# year_time = {
#     '1': 'Зима',
#     '12': 'Зима',
#     '2': 'Зима',
#     '3': 'Весна',
#     '4': 'Весна',
#     '5': 'Весна',
#     '6': 'Лето',
#     '7': 'Лето',
#     '8': 'Лето',
#     '9': 'Осень',
#     '10': 'Осень',
#     '11': 'Осень',
# }
# month = input('Введите число месяца от 1 до 12 ')
# for key,value in year_time.items():
#     if month == key:
#         print(f'Ваш выбранный месяц относится к времени года - {value}')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.

# user_stroke = input('Введите строку из нескольких слов')
# user_stroke_splitted = user_stroke.split()
# for i in user_stroke_splitted:
#     print(i[:10])


# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У
# пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми
# значениями, то новый элемент с тем же значением должен разместиться после них.

# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
#

# my_list_5TASK = [7, 5, 3, 3, 2]
# user_number = int(input('Введите число '))
#
# for num in my_list_5TASK:
#     if user_number > my_list_5TASK[0]:
#         my_list_5TASK.insert(0,user_number)
#         break
#     elif user_number > num:
#         my_list_5TASK.insert(my_list_5TASK.index(num), user_number)
#         break
#     elif user_number == num:
#         my_list_5TASK.insert(my_list_5TASK.index(num)+1, user_number)
#         break
#     else:
#         my_list_5TASK.insert(len(my_list_5TASK), user_number)
#         break
# print(my_list_5TASK)


# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
# информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами,
# то есть характеристиками товара: название, цена, количество, единица измерения. Структуру нужно сформировать
# программно, запросив все данные у пользователя. Пример готовой структуры:
#

# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#

# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например,
# название. Тогда значение — список значений-характеристик, например, список названий товаров.


# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }